# Generated by Django 3.2.9 on 2022-07-23 05:47

import clsroom.utils
from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('account_id', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('branch', models.CharField(blank=True, default='', max_length=2, null=True)),
                ('name', models.CharField(blank=True, max_length=30)),
                ('email', models.EmailField(blank=True, max_length=254, unique=True)),
                ('is_faculty', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('cls_room_id', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=40), blank=True, default=list, size=None)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('cid', models.CharField(default=clsroom.utils.generate_uid, editable=False, max_length=40, primary_key=True, serialize=False)),
                ('mid', models.CharField(max_length=40)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('publiser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cpublisher', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('mid', models.CharField(default=clsroom.utils.generate_uid, editable=False, max_length=40, primary_key=True, serialize=False)),
                ('cls_id', models.CharField(max_length=40)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('comment', models.ManyToManyField(default=None, related_name='classCommentM', to='clsroom.Comment')),
                ('publiser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mpublisher', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MediaFile',
            fields=[
                ('mid', models.CharField(default=clsroom.utils.generate_uid, editable=False, max_length=40, primary_key=True, serialize=False)),
                ('m_url', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('comment', models.ManyToManyField(default=None, related_name='classCommentF', to='clsroom.Comment')),
            ],
        ),
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('cls_id', models.CharField(default='54e640d254-0a4a-11ed-9de3-74c63bf6c54233', editable=False, max_length=40, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('blocked_accounts', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, default=None, max_length=40), blank=True, default=list, size=None)),
                ('media_files', models.ManyToManyField(blank=True, related_name='mediaFiles', to='clsroom.MediaFile')),
                ('messages', models.ManyToManyField(blank=True, related_name='classMessage', to='clsroom.Message')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classOwner', to=settings.AUTH_USER_MODEL)),
                ('students', models.ManyToManyField(blank=True, related_name='students', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
